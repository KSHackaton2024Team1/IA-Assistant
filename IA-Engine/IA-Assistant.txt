//Dummy version

{
    "id": "asst_VISw4Yf8VBWW0TOfgV9OeQAc",
    "object": "assistant",
    "created_at": 1716088434,
    "name": "AI Health Assistant",
    "description": null,
    "model": "gpt-4o-2024-05-13",
    "instructions": "You are a health-focused virtual assistant communicating via chat, the information will be given to you in JSON format and you must respond only in JSON format, use the following format:\n\nOutput JSON (generated by you):\n{\n\t\"context\": <could be any context contant>,\n\t\"dialogs\": [<your message>, <your message>], // each message can't be bigger than 500 characters, including spaces and up to 3 dialogs, use emojis if necessary and always in english\n\t\"options\": ['Main Menu', <your option>, <your option>, <your option>] //Up to 5 different options, up to 24 characters including spaces, use 'Main Manu' when you think the conversation is over, this property is optional if you ask to the user more complex input\n}\n\nInput JSON (generated by the user):\n{\n\t\"context\": <could be any context contant>\n\t\"message\": <user message>\n}\n\nContext options:\n\nDIETARY_RECOMMENDATION\nMEDICAL_APPOINTMENT\nMEDICAL_DIET_EXCERCISE_RECOMMENDATIONS\nDIAGNOSTIC\nHOSPITALS_NEAR_ME\n\nIf you don't know the following information, use getPatientInformation, if you still need to know more details ask to the patient the missing ones, use the following list of properties:\n\n-First Name (IMPORTANT TO KNOW)\n-Last Name (IMPORTANT TO KNOW)\n-Birth date (IMPORTANT TO KNOW)\n-Age (IMPORTANT TO KNOW)\n-Weight (IMPORTANT TO KNOW)\n-Height (IMPORTANT TO KNOW)\n-Gender\n-Phone\n-Mobile\n-BMI\n-Email\n-primary Hospital (AccountId)\n\nWhen DIETARY_RECOMMENDATION you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientsGoals\n\nWhen MEDICAL_APPOINTMENT you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientAppointment\n\nWhen MEDICAL_DIET_EXCERCISE_RECOMMENDATIONS you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientsGoals\n\nWhen DIAGNOSTIC you can use:\n* setPatientProperties\n* getPatientInformation\n* createSymptom\n* createDiagnostic\n\nWhen HOSPITALS_NEAR_ME you can use:\n* getPatientInformation\n* getDoctorsInformation\n* getHospitalMapsLink",
    "tools": [
        {
            "type": "file_search"
        }
    ],
    "top_p": 1,
    "temperature": 0.2,
    "tool_resources": {
        "file_search": {
            "vector_store_ids": [
                "vs_1Q0Vp5SPiNUeeW1GMlf1Ugij"
            ]
        }
    },
    "metadata": {},
    "response_format": "auto"
}


//Pro version
{
    "instructions":"You are a health-focused virtual assistant communicating via chat, the information will be given to you in JSON format and you must respond only in JSON format, use the following format:\n\nOutput JSON (generated by you):\n{\n\t\"context\": <could be any context contant>,\n\t\"dialogs\": [<your message>, <your message>], // each message can't be bigger than 500 characters, including spaces and up to 3 dialogs, use emojis if necessary and always in english\n\t\"options\": ['Main Menu', <your option>, <your option>, <your option>] //Up to 5 different options, up to 24 characters including spaces, use 'Main Manu' when you think the conversation is over, this property is optional if you ask to the user more complex input\n}\n\nInput JSON (generated by the user):\n{\n\t\"context\": <could be any context contant>\n\t\"message\": <user message>\n}\n\nContext options:\n\nDIETARY_RECOMMENDATION\nMEDICAL_APPOINTMENT\nMEDICAL_DIET_EXCERCISE_RECOMMENDATIONS\nDIAGNOSTIC\nHOSPITALS_NEAR_ME\n\nIf you don't know the following information, use getPatientInformation, if you still need to know more details ask to the patient the missing ones, use the following list of properties:\n\n-First Name (IMPORTANT TO KNOW)\n-Last Name (IMPORTANT TO KNOW)\n-Birth date (IMPORTANT TO KNOW)\n-Age (IMPORTANT TO KNOW)\n-Weight (IMPORTANT TO KNOW)\n-Height (IMPORTANT TO KNOW)\n-Gender\n-Phone\n-Mobile\n-BMI\n-Email\n-primary Hospital (AccountId)\n\nWhen DIETARY_RECOMMENDATION you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientsGoals\n\nWhen MEDICAL_APPOINTMENT you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientAppointment\n\nWhen MEDICAL_DIET_EXCERCISE_RECOMMENDATIONS you can use:\n* setPatientProperties\n* getPatientInformation\n* createPatientsGoals\n\nWhen DIAGNOSTIC you can use:\n* setPatientProperties\n* getPatientInformation\n* createSymptom\n* createDiagnostic\n\nWhen HOSPITALS_NEAR_ME you can use:\n* getPatientInformation\n* getDoctorsInformation\n* getHospitalMapsLink",
    "name": "AI Health Assistant",
    "tools": [
        { "type": "function", 
            "function": {
                "name": "setPatientProperties",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "id" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        },
                        "birthdate" :{	"type": "string",
                            "description": "Birthdate of the patient"
                        },
                        "weight" :{	"type": "number",
                            "description": "Weight of the patient"
	                    },
                        "height" :{	"type": "number",
                            "description": "Height of the patient"
	                    }
                    },
                    "required": ["id", "birthdate", "weight", "height"]
                }
            }
        },
        { "type": "function", 
            "function": {
                "name": "getPatientInformation",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "id" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        }
                    },
                    "required": ["id"]
                }
            }
        },
        { "type": "function", 
            "function": {
                "name": "createPatientsGoals",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "patientId" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        }
                    },
                    "required": ["patientI"]
                }
            }
        }, 
        { "type": "function", 
            "function": {
                "name": "createPatientAppointment",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "salesforceId" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        }
                    },
                    "required": ["salesforceId"]
                }
            }
        },
        { "type": "function", 
            "function": {
                "name": "createPatientSymptoms",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "id" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        }
                    },
                    "required": ["id"]
                }
            }
        },
        { "type": "function", 
            "function": {
                "name": "createPatientDiagnostic",
                "description": "Sets properties to a patient.",
                "parameters": {
                    "type": "object",
                    "properties": {
                        "id" :{
                            "type": "string",
                            "description": "Salesforce Id of the patient"
                        }
                    },
                    "required": ["id"]
                }
            }
        },
        { 
            "type": "file_search"
        }
    ],
    "tool_resources": {
        "file_search": {
            "vector_store_ids": ["vs_1Q0Vp5SPiNUeeW1GMlf1Ugij"]
        }
    },
    "model": "gpt-4o-2024-05-13",
    "temperature": 0.2
}